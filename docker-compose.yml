services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - kafka-net
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.5.2
    depends_on: [ zookeeper ]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - kafka-net
    command: >
      bash -c "
        echo 'rmr /brokers/ids/${KAFKA_BROKER_ID}' | zkCli.sh -server zookeeper:2181 >/dev/null 2>&1 || true &&
        /etc/confluent/docker/run
      "
    volumes:
      - kafka-data:/var/lib/kafka/data

  order-service:
    build: ./order-service
    depends_on:
      - kafka
      - db-order-service
    networks:
      - kafka-net
    ports:
      - "8002:8000"
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SMTP_SERVER: ${SMTP_SERVER}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    ports:
      - "8003:8000"
    networks:
      - kafka-net

  inventory-service:
    build: ./inventory-service
    depends_on:
      - kafka
      - db-inventory-service
    networks:
      - kafka-net
    ports:
      - "8001:8001"
    volumes:
      - inventory-data:/app/data
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  db-order-service:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: orders_db
    ports:
      - "5432:5432"
    networks:
      - kafka-net
    volumes:
      - order-service-db-data:/var/lib/postgresql/data

  db-inventory-service:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: inventory_db
    ports:
      - "5433:5432"
    networks:
      - kafka-net
    volumes:
      - inventory-service-db-data:/var/lib/postgresql/data

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - order-service
      - inventory-service
      - notification-service
    ports:
      - "80:80"
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge

volumes:
  inventory-data:
  zookeeper-data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  zookeeper-log:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  kafka-data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
  order-service-db-data:
    driver: local
  inventory-service-db-data:
    driver: local
